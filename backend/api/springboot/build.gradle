import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.sourcemuse.mongo' version '1.0.6'
    id "org.springframework.boot" version "2.1.9.RELEASE"
    id 'java'
    id 'groovy'
    id 'idea'
}

group = 'com.satya'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

apply plugin: 'io.spring.dependency-management' //needed to pull spring-*-starters dependencies
apply plugin: 'project-report' //Needed for htmlDependencyReport

sourceCompatibility = '1.8'

configurations {
//    all {
//        runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
//    } This doesn't work!!

    implementation.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging" //exclude from all
}

dependencies {
//    compile ('org.springframework.boot:spring-boot-starter-data-jpa') //cannot be used with the -starter-data-mongodb; only one

    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'

    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.codehaus.groovy:groovy:2.5.8'

    compile('org.springframework.boot:spring-boot-starter-log4j2'){
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }

    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.7'

    compile('com.athaydes:spock-reports:1.2.13' ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile "io.springfox:springfox-swagger2:2.9.2"

    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
}



task unpack(type: Copy) {
    dependsOn build
    from(zipTree(tasks.jar.outputs.files.singleFile))
    into("build/docker")
}

task dockerBuild(type:Exec) {
  dependsOn unpack
  workingDir '.'

  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
     commandLine 'cmd', '/c', 'stop.bat'
  } else {
	 commandLine 'docker', 'build', 'build/docker', '--tag', "cupitor-backend-springboot:${project.version}", '--file=Dockerfile', '--no-cache'
  }
  
  standardOutput = new ByteArrayOutputStream()

  //extension method dockerBuild.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}

apply from: 'tests-config.gradle'
