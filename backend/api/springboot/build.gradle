import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'com.sourcemuse.mongo' version '1.0.6'
}

group 'com.satya'
version '1.0-SNAPSHOT'

springBootVersion = '1.5.2.RELEASE'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: "logback-classic"
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
    }

    compile("org.springframework.boot:spring-boot-starter-data-mongodb") {
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-data-rest"){
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }
    compile('org.springframework.boot:spring-boot-starter-security') {
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }
    compile('org.springframework.boot:spring-boot-starter-log4j2'){
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }

    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.7'
//    compile 'org.springframework.data:spring-data-mongodb:1.9.3.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'org.springframework.boot:spring-boot-starter-logging'
        exclude module: "logback-classic"
    }
    compile 'org.codehaus.groovy:groovy-all'
    testCompile "junit:junit"
    testCompile "org.gebish:geb-spock:1.0"
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    compile( 'com.athaydes:spock-reports:1.2.13' ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile "io.springfox:springfox-swagger2:2.9.2"

    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4'
    testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.0.3'
    testCompile group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.1'
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2" 
}

bootRun {
    addResources = true
}

task unpack(type: Copy) {
    dependsOn build
    from(zipTree(tasks.jar.outputs.files.singleFile))
    into("build/docker")
}

task dockerBuild(type:Exec) {
  dependsOn unpack
  workingDir '.'

  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
     commandLine 'cmd', '/c', 'stop.bat'
  } else {
	 commandLine 'docker', 'build', 'build/docker', '--tag', "cupitor-backend-springboot:${project.version}", '--file=Dockerfile', '--no-cache'
  }
  
  standardOutput = new ByteArrayOutputStream()

  //extension method dockerBuild.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}

apply from: 'tests-config.gradle'
