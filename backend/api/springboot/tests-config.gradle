
sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

test {
    useJUnitPlatform()
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

integrationTest {
    environment("SPRING_PROFILES_ACTIVE", "integration")
    useJUnitPlatform()
}

dependencies {
    integrationTestCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4'
    testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo'
    testCompile group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'
    testCompile 'org.codehaus.groovy:groovy:2.5.8'
    testCompile ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'org.springframework.security:spring-security-test'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    testCompile "org.gebish:geb-spock:1.0"
    testCompile("org.spockframework:spock-core:1.2-groovy-2.5") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

